package unaccented

import (
	"regexp"
)

// Return a string without accent
func Unaccented(str string) string {
	re := regexp.MustCompile("[áàãâä]")
	str = re.ReplaceAllString(str, "a")
	re = regexp.MustCompile("[çĉ]")
	str = re.ReplaceAllString(str, "c")
	re = regexp.MustCompile("[éèẽêë]")
	str = re.ReplaceAllString(str, "e")
	re = regexp.MustCompile("[ǵĝ]")
	str = re.ReplaceAllString(str, "g")
	re = regexp.MustCompile("[ĥḧ]")
	str = re.ReplaceAllString(str, "h")
	re = regexp.MustCompile("[íìĩîï]")
	str = re.ReplaceAllString(str, "i")
	re = regexp.MustCompile("[ĵ]")
	str = re.ReplaceAllString(str, "j")
	re = regexp.MustCompile("[ḱ]")
	str = re.ReplaceAllString(str, "k")
	re = regexp.MustCompile("[ĺ]")
	str = re.ReplaceAllString(str, "l")
	re = regexp.MustCompile("[ḿ]")
	str = re.ReplaceAllString(str, "m")
	re = regexp.MustCompile("[ńǹñ]")
	str = re.ReplaceAllString(str, "n")
	re = regexp.MustCompile("[óòõôö]")
	str = re.ReplaceAllString(str, "o")
	re = regexp.MustCompile("[ṕ]")
	str = re.ReplaceAllString(str, "p")
	re = regexp.MustCompile("[ŕ]")
	str = re.ReplaceAllString(str, "r")
	re = regexp.MustCompile("[śŝ]")
	str = re.ReplaceAllString(str, "s")
	re = regexp.MustCompile("[ẗ]")
	str = re.ReplaceAllString(str, "t")
	re = regexp.MustCompile("[úùũûü]")
	str = re.ReplaceAllString(str, "u")
	re = regexp.MustCompile("[ǘǜṽ]")
	str = re.ReplaceAllString(str, "v")
	re = regexp.MustCompile("[ẃẁŵẅ]")
	str = re.ReplaceAllString(str, "w")
	re = regexp.MustCompile("[ẍ]")
	str = re.ReplaceAllString(str, "x")
	re = regexp.MustCompile("[ýỳỹŷÿ]")
	str = re.ReplaceAllString(str, "y")
	re = regexp.MustCompile("[źẑ]")
	str = re.ReplaceAllString(str, "z")

	re = regexp.MustCompile("[ÁÀÂÃÄ]")
	str = re.ReplaceAllString(str, "A")
	re = regexp.MustCompile("[ÇĈ]")
	str = re.ReplaceAllString(str, "C")
	re = regexp.MustCompile("[ÉÈẼÊË]")
	str = re.ReplaceAllString(str, "E")
	re = regexp.MustCompile("[ǴĜ]")
	str = re.ReplaceAllString(str, "G")
	re = regexp.MustCompile("[ĤḦ]")
	str = re.ReplaceAllString(str, "H")
	re = regexp.MustCompile("[ÍÌÎĨÏ]")
	str = re.ReplaceAllString(str, "I")
	re = regexp.MustCompile("[Ĵ]")
	str = re.ReplaceAllString(str, "J")
	re = regexp.MustCompile("[Ḱ]")
	str = re.ReplaceAllString(str, "K")
	re = regexp.MustCompile("[Ĺ]")
	str = re.ReplaceAllString(str, "L")
	re = regexp.MustCompile("[Ḿ]")
	str = re.ReplaceAllString(str, "M")
	re = regexp.MustCompile("[ŃǸÑ]")
	str = re.ReplaceAllString(str, "N")
	re = regexp.MustCompile("[ÓÒÕÔÖ]")
	str = re.ReplaceAllString(str, "O")
	re = regexp.MustCompile("[Ṕ]")
	str = re.ReplaceAllString(str, "P")
	re = regexp.MustCompile("[Ŕ]")
	str = re.ReplaceAllString(str, "R")
	re = regexp.MustCompile("[ŚŜ]")
	str = re.ReplaceAllString(str, "S")
	re = regexp.MustCompile("[ÚÙŨÛÜ]")
	str = re.ReplaceAllString(str, "U")
	re = regexp.MustCompile("[ǗǛṼ]")
	str = re.ReplaceAllString(str, "V")
	re = regexp.MustCompile("[ẂẀŴẄ]")
	str = re.ReplaceAllString(str, "W")
	re = regexp.MustCompile("[Ẍ]")
	str = re.ReplaceAllString(str, "X")
	re = regexp.MustCompile("[ÝỲỸŶŸ]")
	str = re.ReplaceAllString(str, "Y")
	re = regexp.MustCompile("[ŹẐ]")
	str = re.ReplaceAllString(str, "Z")

	return str
}
